!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e){t.exports={isArray:function(t){return"[object Array]"===Object.prototype.toString.call(s)},arrayOr:function(t,e){return this.isArray(t)?t:e},isHTMLElement:function(t){return!!t&&!!t.nodeName},htmlElementOr:function(t,e){return this.isHTMLElement(t)?t:e},isValid:function(t){return!this.isUndefined(t)&&!this.isNull(t)},validOr:function(t,e){return this.isValid(t)?t:e},isError:function(t){return"[object Error]"===Object.prototype.toString.call(t)},errorOr(t,e){return this.isError(t)?t:e},isUndefined:function(t){return"[object Undefined]"===Object.prototype.toString.call(t)},undefinedOr:function(t,e){return this.isUndefined(t)?t:e},isNull:function(t){return"[object Null]"===Object.prototype.toString.call(t)},nullOr:function(t,e){return this.isNull(t)?t:e},isMath:function(t){return"[object Math]"===Object.prototype.toString.call(t)},mathOr:function(t,e){return this.isMath(t)?t:e},isObject:function(t){return"[object Object]"===Object.prototype.toString.call(t)},objectOr:function(t,e){return this.isObject(t)?t:e},isFunction:function(t){return"[object Function]"===Object.prototype.toString.call(t)},functionOr:function(t,e){return this.isFunction(t)?t:e},isRegExp:t=>"[object RegExp]"===Object.prototype.toString.call(t),regExpOr(t,e){return this.isRegExp(t)?t:e},isString:function(t){return"[object String]"===Object.prototype.toString.call(t)},stringOr:function(t,e){return this.isString(t)?t:e},isDate:function(t){return"[object Date]"===Object.prototype.toString.call(t)},dateOr:function(t,e){return this.isDate(t)?t:e},isNegativeNumber:function(t){return"[object Number]"===Object.prototype.toString.call(t)&&0>t},negativeNumberOr:function(t,e){return this.isNegativeNumber(t)?t:e},isPositiveNumber:function(t){return"[object Number]"===Object.prototype.toString.call(t)&&0<=t},postiveNumberOr:function(t,e){return this.isPositiveNumber(t)?t:e},isNumber:function(t){return"[object Number]"===Object.prototype.toString.call(t)},numberOr(t,e){return this.isNumber(t)?t:e},isBoolean:function(t){return"[object Boolean]"===Object.prototype.toString.call(t)},booleanOr:function(t,e){return this.isBoolean(t)?t:e},isObjectNotEmpty:function(t){return!!this.isObject(t)&&!!Object.keys(t).length},objectNotEmptyOr:function(t,e){return this.isObjectNotEmpty(t)?t:e},isArgs:function(t){return"[object Arguments]"===Object.prototype.toString.call(t)},argsOr:function(t,e){return this.isArgs(t)?t:e},isTextNode:function(t){return!!this.isHTMLElement(t)&&3===t.nodeType},textNodeOr:function(t,e){return this.isTextNode(t)?t:e}}},function(t,e,n){var i=n(2),o=n(3);window.xInterval=i,window.xTimeout=o},function(t,e,n){const i=n(0);function o(t,e){this.clock=0,this.breakloop=i.isNumber(e)?e:null,this.clockUnit=100,this.timeLine={remove:function(t){this.hasOwnProperty(t)&&(delete this[t],console.log("Removed action on time:"+t))}},this.interval=null,this.state="paused",this.n=1,this.timeEdit=0,this.defaultTimeline=!1,this.timeOver=i.isNumber(t)?t:null,this.setClock=function(t){this.clock=t},this.setClockUnit=function(t){return i.isNumber(t)?(this.clockUnit=t,this):(console.warn("Clock Unit must be number in milisecond: Used default clock unit"),this)},this.at=function(t,e){if(1==arguments.length&&i.isObject(arguments[0]))for(keys in arguments[0])if(this.timeLine.hasOwnProperty(keys)){var n=this.timeLine[keys];this.timeLine[keys]=function(t,e,i){n(t,e,i),arguments[0][keys](t,e,i)}}else this.timeLine[keys]=arguments[0][keys];else if(isFinite(t)&&i.isFunction(e))if(this.timeLine.hasOwnProperty(t)){n=this.timeLine[t];console.log("collison"),this.timeLine[t]=function(t,i,o){n(t,i,o),e(t,i,o)}}else this.timeLine[t]=e;else console.error("Illegal arguments supplied to xInterval.at method");return this},this.clockInterval=function(){if(!this.timeOver)return console.error("Please give  xInterval instance  a time where it stop and loop over"),!1;var t=this,e=setInterval(function(){if(t.clock>t.timeOver)if(i.isNumber(t.breakloop)){if(t.breakloop==t.n++)return clearInterval(t.interval),t.breakloop=!1,2;t.clock=0}else t.clock=0;i.isObjectNotEmpty(t.timeLine)?(t.clock+=t.clockUnit,t.timeLine.hasOwnProperty(t.clock)&&(i.isFunction(t.timeLine[t.clock])?t.timeLine[t.clock](e,t.setClock,t.clock):console.error("Not a valid function in timeline:"+t.clock))):t.clear()},this.clockUnit);return this.state="running",this.interval=e,this},this.remove=function(t){return this.timeLine.hasOwnProperty(t)&&(delete this.timeLine[t],console.log("Removed action on time:"+t)),this}}t.exports=o,o.prototype={toString:function(){return"[Object xInterval]"},start:function(){return"paused"===this.state&&(i.isFunction(this.event.beforestart)&&this.event.beforestart(),this.n=1,this.clock=0,this.clockInterval(),this.state="running",i.isFunction(this.event.onstart)&&this.event.onstart()),i.isFunction(this.event.afterstart)&&this.event.afterstartstart(),this},pause:function(){return i.isFunction(this.event.beforepause)&&this.event.beforepause(),"running"===this.state&&(clearInterval(this.interval),this.state="paused",i.isFunction(this.event.onpause)&&this.event.onpause()),i.isFunction(this.event.beforestop)&&this.event.beforestop(),this},resume:function(){return i.isFunction(this.event.beforeresume)&&!1===this.event.beforeresume(this)?this:("paused"===this.state&&(this.clockInterval(),this.state="running",i.isFunction(this.event.onresume)&&this.event.onresume()),i.isFunction(this.event.afterresume)&&this.event.afterresume(),this)},forward:function(t){return t=t||500,this.clock+t>this.timeOver?this.clock=this.timeOver:this.clock=this.clock+t,"paused"===this.state&&(this.clockInterval(),clearInterval(this.interval)),this},backward:function(t){return t=t||500,this.clock-t<0?this.clock=0:this.clock=this.clock-t,"paused"===this.state&&(this.clockInterval(),clearInterval(this.interval)),this},reverse:function(){var t={};for(keys in this.timeLine){var e=keys;parseInt(e)&&keys<this.timeOver&&(e=this.timeOver-keys,console.log(e)),t[e]=this.timeLine[keys]}return this.timeLine=t,this},slow:function(t){t=i.isNumber(t)?t:100;var e={};for(keys in this.timeOver+=Math.round(.5*this.timeOver),this.timeLine){var n=keys;parseInt(keys)&&keys<this.timeOver&&(n=parseInt(keys)+.5*parseInt(keys),n=100*parseInt(Math.round(n/100)),console.log(n)),e[n]=this.timeLine[keys]}this.timeLine=e},fast:function(t){if(-2>this.timeEdit)return!1;t=i.isNumber(t)?t/100:1;var e={};for(keys in this.timeLine){var n=keys;parseInt(keys)&&t<keys&&keys>200&&(n=parseInt(keys)-.5*parseInt(keys),n=100*parseInt(Math.round(n/100)),console.log(n)),e[n]=this.timeLine[keys]}this.timeLine=e,this.timeOver-=Math.round(.5*this.timeOver),this.timeEdit-=1},stop:function(){return i.isFunction(this.event.beforestop)&&this.event.beforestop(),"running"===this.state&&(clearInterval(this.interval),this.state="paused",this.clock=0,i.isFunction(this.event.onstop)&&this.event.onstop()),i.isFunction(this.event.afterstop)&&this.event.afterstop(),this},restart:function(){return this.state="paused",this.start()},clear:function(){return this.interval&&(clearInterval(this.interval),this.clock=0,this.state="paused",this.n=1),this},event:{beforeplay:null,afterplay:null,onplay:null,onpause:null,beforepause:null,afterpause:null,beforestart:null,afterstart:null,onstart:null,onstop:null,beforestop:null,afterstop:null,onresume:null,beforeresume:null,afterresume:null,onloop:null,beforeloop:null,afterloop:null},showUserControl:function(t){var e,n,i,o,s,r,u,c,l=this;return e=document.createElement("button"),(n=document.createElement("button")).textContent="play",(i=document.createElement("button")).textContent="pause",(c=document.createElement("button")).textContent="resume",(u=document.createElement("button")).textContent="stop",(o=document.createElement("button")).textContent="start",(s=document.createElement("button")).textContent="backward",(r=document.createElement("button")).textContent="forward",clear=document.createElement("button"),clear.textContent="clear",e.append(n),e.append(i),e.append(c),e.append(u),e.append(s),e.append(r),e.append(o),e.append(clear),e.style.position="absolute",e.style.zIndex=100,e.style.bottom="5px",e.style.opacity="0.5",t?t.append(e):document.body.append(e),n.onclick=function(){l.resume()},i.onclick=function(){l.pause()},c.onclick=function(){l.resume()},u.onclick=function(){l.stop()},o.onclick=function(){l.start()},s.onclick=function(){l.backward(500)},r.onclick=function(){l.forward(500)},clear.onclick=function(){l.clear()},e}}},function(t,e,n){const i=n(0);function o(t){this.loop=!!i.isNumber(t)&&--t,this.loopCount=0,this.init=0,this.state="paused",this.xtimer=null,this.totaltime=0,this.timeLine=[],this.at=function(t,e){if(1==arguments.length&&i.isObject(arguments[0])){for(var n in arguments[0]){var o=n-this.totaltime;this.timeLine.push({time:o,callback:arguments[0][n]}),this.totaltime=n}console.warn("Dont pass {} agruments in after() or at() methods; might not get desired result")}else isFinite(t)&&i.isFunction(e)?this.timeLine.push({time:t,callback:e}):console.log("Illegal arguments supplied to xTimeout.at method");return this},this.after=function(t,e){return 1==arguments.length&&i.isObject(arguments[0])?this.at(t):this.at(t,e)},this.main=function(){var t=this,e=this.timeLine.length,n=this.timeLine;this.xtimer=setTimeout(function i(){return"paused"==t.state?(clearTimeout(t.xtimer),!1):(n[t.init].callback(),t.init++,t.init==e?(clearTimeout(t.xtimer),!1):void(t.xtimer=setTimeout(i,n[t.init].time)))},n[t.init].time)}}t.exports=o,o.prototype={toString:function(){return"[Object xTimeout]"},next:function(){return this.pause(),this.init<this.timeLine.length?this.init+=1:this.init=this.timeLine.length,this.resume()},first:function(){return this.init=0,this},last:function(){this.init=this.timeLine.length-1,this.this},previous:function(){return this.pause(),this.init>1?this.init-=2:this.init=0,this.resume()},start:function(){if(i.isFunction(this.event.beforestart)&&this.event.beforestart(),this.loop){var t=this;this.at(100,function(){t.loopCount<t.loop?(i.isFunction(t.event.beforeloop)&&t.event.beforeloop(),t.loopCount++,t.init=-1):(t.timeLine.pop(),i.isFunction(t.event.afterloop)&&t.event.afterloop())})}return this.state="running",this.init=0,i.isFunction(this.event.onstart)&&this.event.onstart(),this.main(),i.isFunction(this.event.afterstart)&&this.event.afterstart(),this},pause:function(){return i.isFunction(this.event.beforepause)&&this.event.beforepause(),"running"==this.state&&(this.clear(),this.state="paused",i.isFunction(this.event.onpause)&&this.event.onpause()),i.isFunction(this.event.afterpause)&&this.event.afterpause(),this},resume:function(){return i.isFunction(this.event.beforeresume)&&this.event.beforeresume(),"paused"==this.state&&this.timeLine.length>this.init&&(this.main(),this.state="running",i.isFunction(this.event.onresume)&&this.event.onresume()),i.isFunction(this.event.afterresume)&&this.event.afterresume(),this},clear:function(){this.xtimer&&clearTimeout(this.xtimer)},stop:function(){i.isFunction(this.event.beforestop)&&this.event.beforestop(),this.clear(),this.state="paused",this.init=0,i.isFunction(this.event.onstop)&&this.event.onstop(),i.isFunction(this.event.afterstop)&&this.event.afterstop()},event:{beforeplay:null,afterplay:null,onplay:null,onpause:null,beforepause:null,afterpause:null,beforestart:null,afterstart:null,onstart:null,onstop:null,beforestop:null,afterstop:null,onresume:null,beforeresume:null,afterresume:null,onloop:null,beforeloop:null,afterloop:null},showUserControl:function(t){var e,n,i,o,s,r,u,c,l=this;return e=document.createElement("button"),(n=document.createElement("button")).textContent="play",(i=document.createElement("button")).textContent="pause",(u=document.createElement("button")).textContent="resume",(o=document.createElement("button")).textContent="start",(s=document.createElement("button")).textContent="previous",(r=document.createElement("button")).textContent="next",(c=document.createElement("button")).textContent="clear",e.append(n),e.append(i),e.append(u),e.append(s),e.append(r),e.append(o),e.append(c),e.style.position="absolute",e.style.zIndex=100,e.style.bottom="5px",e.style.opacity="0.5",t?t.append(e):document.body.append(e),n.onclick=function(){l.resume()},i.onclick=function(){l.pause()},u.onclick=function(){l.resume()},o.onclick=function(){l.start()},s.onclick=function(){l.previous(500)},r.onclick=function(){l.next(500)},c.onclick=function(){l.clear()},e}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,